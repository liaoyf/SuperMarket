package com.sm.mybatis.mb;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SaleBreakageExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	public SaleBreakageExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andBreakageIdIsNull() {
			addCriterion("Breakage_ID is null");
			return (Criteria) this;
		}

		public Criteria andBreakageIdIsNotNull() {
			addCriterion("Breakage_ID is not null");
			return (Criteria) this;
		}

		public Criteria andBreakageIdEqualTo(Integer value) {
			addCriterion("Breakage_ID =", value, "breakageId");
			return (Criteria) this;
		}

		public Criteria andBreakageIdNotEqualTo(Integer value) {
			addCriterion("Breakage_ID <>", value, "breakageId");
			return (Criteria) this;
		}

		public Criteria andBreakageIdGreaterThan(Integer value) {
			addCriterion("Breakage_ID >", value, "breakageId");
			return (Criteria) this;
		}

		public Criteria andBreakageIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("Breakage_ID >=", value, "breakageId");
			return (Criteria) this;
		}

		public Criteria andBreakageIdLessThan(Integer value) {
			addCriterion("Breakage_ID <", value, "breakageId");
			return (Criteria) this;
		}

		public Criteria andBreakageIdLessThanOrEqualTo(Integer value) {
			addCriterion("Breakage_ID <=", value, "breakageId");
			return (Criteria) this;
		}

		public Criteria andBreakageIdIn(List<Integer> values) {
			addCriterion("Breakage_ID in", values, "breakageId");
			return (Criteria) this;
		}

		public Criteria andBreakageIdNotIn(List<Integer> values) {
			addCriterion("Breakage_ID not in", values, "breakageId");
			return (Criteria) this;
		}

		public Criteria andBreakageIdBetween(Integer value1, Integer value2) {
			addCriterion("Breakage_ID between", value1, value2, "breakageId");
			return (Criteria) this;
		}

		public Criteria andBreakageIdNotBetween(Integer value1, Integer value2) {
			addCriterion("Breakage_ID not between", value1, value2,
					"breakageId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdIsNull() {
			addCriterion("Goods_ID is null");
			return (Criteria) this;
		}

		public Criteria andGoodsIdIsNotNull() {
			addCriterion("Goods_ID is not null");
			return (Criteria) this;
		}

		public Criteria andGoodsIdEqualTo(Integer value) {
			addCriterion("Goods_ID =", value, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdNotEqualTo(Integer value) {
			addCriterion("Goods_ID <>", value, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdGreaterThan(Integer value) {
			addCriterion("Goods_ID >", value, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("Goods_ID >=", value, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdLessThan(Integer value) {
			addCriterion("Goods_ID <", value, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdLessThanOrEqualTo(Integer value) {
			addCriterion("Goods_ID <=", value, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdIn(List<Integer> values) {
			addCriterion("Goods_ID in", values, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdNotIn(List<Integer> values) {
			addCriterion("Goods_ID not in", values, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdBetween(Integer value1, Integer value2) {
			addCriterion("Goods_ID between", value1, value2, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsIdNotBetween(Integer value1, Integer value2) {
			addCriterion("Goods_ID not between", value1, value2, "goodsId");
			return (Criteria) this;
		}

		public Criteria andGoodsNumIsNull() {
			addCriterion("Goods_Num is null");
			return (Criteria) this;
		}

		public Criteria andGoodsNumIsNotNull() {
			addCriterion("Goods_Num is not null");
			return (Criteria) this;
		}

		public Criteria andGoodsNumEqualTo(Integer value) {
			addCriterion("Goods_Num =", value, "goodsNum");
			return (Criteria) this;
		}

		public Criteria andGoodsNumNotEqualTo(Integer value) {
			addCriterion("Goods_Num <>", value, "goodsNum");
			return (Criteria) this;
		}

		public Criteria andGoodsNumGreaterThan(Integer value) {
			addCriterion("Goods_Num >", value, "goodsNum");
			return (Criteria) this;
		}

		public Criteria andGoodsNumGreaterThanOrEqualTo(Integer value) {
			addCriterion("Goods_Num >=", value, "goodsNum");
			return (Criteria) this;
		}

		public Criteria andGoodsNumLessThan(Integer value) {
			addCriterion("Goods_Num <", value, "goodsNum");
			return (Criteria) this;
		}

		public Criteria andGoodsNumLessThanOrEqualTo(Integer value) {
			addCriterion("Goods_Num <=", value, "goodsNum");
			return (Criteria) this;
		}

		public Criteria andGoodsNumIn(List<Integer> values) {
			addCriterion("Goods_Num in", values, "goodsNum");
			return (Criteria) this;
		}

		public Criteria andGoodsNumNotIn(List<Integer> values) {
			addCriterion("Goods_Num not in", values, "goodsNum");
			return (Criteria) this;
		}

		public Criteria andGoodsNumBetween(Integer value1, Integer value2) {
			addCriterion("Goods_Num between", value1, value2, "goodsNum");
			return (Criteria) this;
		}

		public Criteria andGoodsNumNotBetween(Integer value1, Integer value2) {
			addCriterion("Goods_Num not between", value1, value2, "goodsNum");
			return (Criteria) this;
		}

		public Criteria andStockIdIsNull() {
			addCriterion("Stock_ID is null");
			return (Criteria) this;
		}

		public Criteria andStockIdIsNotNull() {
			addCriterion("Stock_ID is not null");
			return (Criteria) this;
		}

		public Criteria andStockIdEqualTo(Integer value) {
			addCriterion("Stock_ID =", value, "stockId");
			return (Criteria) this;
		}

		public Criteria andStockIdNotEqualTo(Integer value) {
			addCriterion("Stock_ID <>", value, "stockId");
			return (Criteria) this;
		}

		public Criteria andStockIdGreaterThan(Integer value) {
			addCriterion("Stock_ID >", value, "stockId");
			return (Criteria) this;
		}

		public Criteria andStockIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("Stock_ID >=", value, "stockId");
			return (Criteria) this;
		}

		public Criteria andStockIdLessThan(Integer value) {
			addCriterion("Stock_ID <", value, "stockId");
			return (Criteria) this;
		}

		public Criteria andStockIdLessThanOrEqualTo(Integer value) {
			addCriterion("Stock_ID <=", value, "stockId");
			return (Criteria) this;
		}

		public Criteria andStockIdIn(List<Integer> values) {
			addCriterion("Stock_ID in", values, "stockId");
			return (Criteria) this;
		}

		public Criteria andStockIdNotIn(List<Integer> values) {
			addCriterion("Stock_ID not in", values, "stockId");
			return (Criteria) this;
		}

		public Criteria andStockIdBetween(Integer value1, Integer value2) {
			addCriterion("Stock_ID between", value1, value2, "stockId");
			return (Criteria) this;
		}

		public Criteria andStockIdNotBetween(Integer value1, Integer value2) {
			addCriterion("Stock_ID not between", value1, value2, "stockId");
			return (Criteria) this;
		}

		public Criteria andStaffIdIsNull() {
			addCriterion("Staff_ID is null");
			return (Criteria) this;
		}

		public Criteria andStaffIdIsNotNull() {
			addCriterion("Staff_ID is not null");
			return (Criteria) this;
		}

		public Criteria andStaffIdEqualTo(Integer value) {
			addCriterion("Staff_ID =", value, "staffId");
			return (Criteria) this;
		}

		public Criteria andStaffIdNotEqualTo(Integer value) {
			addCriterion("Staff_ID <>", value, "staffId");
			return (Criteria) this;
		}

		public Criteria andStaffIdGreaterThan(Integer value) {
			addCriterion("Staff_ID >", value, "staffId");
			return (Criteria) this;
		}

		public Criteria andStaffIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("Staff_ID >=", value, "staffId");
			return (Criteria) this;
		}

		public Criteria andStaffIdLessThan(Integer value) {
			addCriterion("Staff_ID <", value, "staffId");
			return (Criteria) this;
		}

		public Criteria andStaffIdLessThanOrEqualTo(Integer value) {
			addCriterion("Staff_ID <=", value, "staffId");
			return (Criteria) this;
		}

		public Criteria andStaffIdIn(List<Integer> values) {
			addCriterion("Staff_ID in", values, "staffId");
			return (Criteria) this;
		}

		public Criteria andStaffIdNotIn(List<Integer> values) {
			addCriterion("Staff_ID not in", values, "staffId");
			return (Criteria) this;
		}

		public Criteria andStaffIdBetween(Integer value1, Integer value2) {
			addCriterion("Staff_ID between", value1, value2, "staffId");
			return (Criteria) this;
		}

		public Criteria andStaffIdNotBetween(Integer value1, Integer value2) {
			addCriterion("Staff_ID not between", value1, value2, "staffId");
			return (Criteria) this;
		}

		public Criteria andBreakageTimeIsNull() {
			addCriterion("Breakage_time is null");
			return (Criteria) this;
		}

		public Criteria andBreakageTimeIsNotNull() {
			addCriterion("Breakage_time is not null");
			return (Criteria) this;
		}

		public Criteria andBreakageTimeEqualTo(Date value) {
			addCriterionForJDBCDate("Breakage_time =", value, "breakageTime");
			return (Criteria) this;
		}

		public Criteria andBreakageTimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("Breakage_time <>", value, "breakageTime");
			return (Criteria) this;
		}

		public Criteria andBreakageTimeGreaterThan(Date value) {
			addCriterionForJDBCDate("Breakage_time >", value, "breakageTime");
			return (Criteria) this;
		}

		public Criteria andBreakageTimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("Breakage_time >=", value, "breakageTime");
			return (Criteria) this;
		}

		public Criteria andBreakageTimeLessThan(Date value) {
			addCriterionForJDBCDate("Breakage_time <", value, "breakageTime");
			return (Criteria) this;
		}

		public Criteria andBreakageTimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("Breakage_time <=", value, "breakageTime");
			return (Criteria) this;
		}

		public Criteria andBreakageTimeIn(List<Date> values) {
			addCriterionForJDBCDate("Breakage_time in", values, "breakageTime");
			return (Criteria) this;
		}

		public Criteria andBreakageTimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("Breakage_time not in", values,
					"breakageTime");
			return (Criteria) this;
		}

		public Criteria andBreakageTimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("Breakage_time between", value1, value2,
					"breakageTime");
			return (Criteria) this;
		}

		public Criteria andBreakageTimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("Breakage_time not between", value1,
					value2, "breakageTime");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkIsNull() {
			addCriterion("Breakage_remark is null");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkIsNotNull() {
			addCriterion("Breakage_remark is not null");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkEqualTo(String value) {
			addCriterion("Breakage_remark =", value, "breakageRemark");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkNotEqualTo(String value) {
			addCriterion("Breakage_remark <>", value, "breakageRemark");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkGreaterThan(String value) {
			addCriterion("Breakage_remark >", value, "breakageRemark");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkGreaterThanOrEqualTo(String value) {
			addCriterion("Breakage_remark >=", value, "breakageRemark");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkLessThan(String value) {
			addCriterion("Breakage_remark <", value, "breakageRemark");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkLessThanOrEqualTo(String value) {
			addCriterion("Breakage_remark <=", value, "breakageRemark");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkLike(String value) {
			addCriterion("Breakage_remark like", value, "breakageRemark");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkNotLike(String value) {
			addCriterion("Breakage_remark not like", value, "breakageRemark");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkIn(List<String> values) {
			addCriterion("Breakage_remark in", values, "breakageRemark");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkNotIn(List<String> values) {
			addCriterion("Breakage_remark not in", values, "breakageRemark");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkBetween(String value1, String value2) {
			addCriterion("Breakage_remark between", value1, value2,
					"breakageRemark");
			return (Criteria) this;
		}

		public Criteria andBreakageRemarkNotBetween(String value1, String value2) {
			addCriterion("Breakage_remark not between", value1, value2,
					"breakageRemark");
			return (Criteria) this;
		}

		public Criteria andStateIdIsNull() {
			addCriterion("state_ID is null");
			return (Criteria) this;
		}

		public Criteria andStateIdIsNotNull() {
			addCriterion("state_ID is not null");
			return (Criteria) this;
		}

		public Criteria andStateIdEqualTo(Integer value) {
			addCriterion("state_ID =", value, "stateId");
			return (Criteria) this;
		}

		public Criteria andStateIdNotEqualTo(Integer value) {
			addCriterion("state_ID <>", value, "stateId");
			return (Criteria) this;
		}

		public Criteria andStateIdGreaterThan(Integer value) {
			addCriterion("state_ID >", value, "stateId");
			return (Criteria) this;
		}

		public Criteria andStateIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("state_ID >=", value, "stateId");
			return (Criteria) this;
		}

		public Criteria andStateIdLessThan(Integer value) {
			addCriterion("state_ID <", value, "stateId");
			return (Criteria) this;
		}

		public Criteria andStateIdLessThanOrEqualTo(Integer value) {
			addCriterion("state_ID <=", value, "stateId");
			return (Criteria) this;
		}

		public Criteria andStateIdIn(List<Integer> values) {
			addCriterion("state_ID in", values, "stateId");
			return (Criteria) this;
		}

		public Criteria andStateIdNotIn(List<Integer> values) {
			addCriterion("state_ID not in", values, "stateId");
			return (Criteria) this;
		}

		public Criteria andStateIdBetween(Integer value1, Integer value2) {
			addCriterion("state_ID between", value1, value2, "stateId");
			return (Criteria) this;
		}

		public Criteria andStateIdNotBetween(Integer value1, Integer value2) {
			addCriterion("state_ID not between", value1, value2, "stateId");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table t_sale_breakage
	 * @mbggenerated  Tue Jun 30 10:38:14 CST 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_sale_breakage
     *
     * @mbggenerated do_not_delete_during_merge Mon Jun 29 11:31:57 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}