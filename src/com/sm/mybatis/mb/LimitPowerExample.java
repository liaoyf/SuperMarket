package com.sm.mybatis.mb;

import java.util.ArrayList;
import java.util.List;

public class LimitPowerExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	public LimitPowerExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andLPIdIsNull() {
			addCriterion("L_P_ID is null");
			return (Criteria) this;
		}

		public Criteria andLPIdIsNotNull() {
			addCriterion("L_P_ID is not null");
			return (Criteria) this;
		}

		public Criteria andLPIdEqualTo(Integer value) {
			addCriterion("L_P_ID =", value, "lPId");
			return (Criteria) this;
		}

		public Criteria andLPIdNotEqualTo(Integer value) {
			addCriterion("L_P_ID <>", value, "lPId");
			return (Criteria) this;
		}

		public Criteria andLPIdGreaterThan(Integer value) {
			addCriterion("L_P_ID >", value, "lPId");
			return (Criteria) this;
		}

		public Criteria andLPIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("L_P_ID >=", value, "lPId");
			return (Criteria) this;
		}

		public Criteria andLPIdLessThan(Integer value) {
			addCriterion("L_P_ID <", value, "lPId");
			return (Criteria) this;
		}

		public Criteria andLPIdLessThanOrEqualTo(Integer value) {
			addCriterion("L_P_ID <=", value, "lPId");
			return (Criteria) this;
		}

		public Criteria andLPIdIn(List<Integer> values) {
			addCriterion("L_P_ID in", values, "lPId");
			return (Criteria) this;
		}

		public Criteria andLPIdNotIn(List<Integer> values) {
			addCriterion("L_P_ID not in", values, "lPId");
			return (Criteria) this;
		}

		public Criteria andLPIdBetween(Integer value1, Integer value2) {
			addCriterion("L_P_ID between", value1, value2, "lPId");
			return (Criteria) this;
		}

		public Criteria andLPIdNotBetween(Integer value1, Integer value2) {
			addCriterion("L_P_ID not between", value1, value2, "lPId");
			return (Criteria) this;
		}

		public Criteria andLPNameIsNull() {
			addCriterion("L_P_Name is null");
			return (Criteria) this;
		}

		public Criteria andLPNameIsNotNull() {
			addCriterion("L_P_Name is not null");
			return (Criteria) this;
		}

		public Criteria andLPNameEqualTo(String value) {
			addCriterion("L_P_Name =", value, "lPName");
			return (Criteria) this;
		}

		public Criteria andLPNameNotEqualTo(String value) {
			addCriterion("L_P_Name <>", value, "lPName");
			return (Criteria) this;
		}

		public Criteria andLPNameGreaterThan(String value) {
			addCriterion("L_P_Name >", value, "lPName");
			return (Criteria) this;
		}

		public Criteria andLPNameGreaterThanOrEqualTo(String value) {
			addCriterion("L_P_Name >=", value, "lPName");
			return (Criteria) this;
		}

		public Criteria andLPNameLessThan(String value) {
			addCriterion("L_P_Name <", value, "lPName");
			return (Criteria) this;
		}

		public Criteria andLPNameLessThanOrEqualTo(String value) {
			addCriterion("L_P_Name <=", value, "lPName");
			return (Criteria) this;
		}

		public Criteria andLPNameLike(String value) {
			addCriterion("L_P_Name like", value, "lPName");
			return (Criteria) this;
		}

		public Criteria andLPNameNotLike(String value) {
			addCriterion("L_P_Name not like", value, "lPName");
			return (Criteria) this;
		}

		public Criteria andLPNameIn(List<String> values) {
			addCriterion("L_P_Name in", values, "lPName");
			return (Criteria) this;
		}

		public Criteria andLPNameNotIn(List<String> values) {
			addCriterion("L_P_Name not in", values, "lPName");
			return (Criteria) this;
		}

		public Criteria andLPNameBetween(String value1, String value2) {
			addCriterion("L_P_Name between", value1, value2, "lPName");
			return (Criteria) this;
		}

		public Criteria andLPNameNotBetween(String value1, String value2) {
			addCriterion("L_P_Name not between", value1, value2, "lPName");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionIsNull() {
			addCriterion("L_P_Description is null");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionIsNotNull() {
			addCriterion("L_P_Description is not null");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionEqualTo(String value) {
			addCriterion("L_P_Description =", value, "lPDescription");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionNotEqualTo(String value) {
			addCriterion("L_P_Description <>", value, "lPDescription");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionGreaterThan(String value) {
			addCriterion("L_P_Description >", value, "lPDescription");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("L_P_Description >=", value, "lPDescription");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionLessThan(String value) {
			addCriterion("L_P_Description <", value, "lPDescription");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionLessThanOrEqualTo(String value) {
			addCriterion("L_P_Description <=", value, "lPDescription");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionLike(String value) {
			addCriterion("L_P_Description like", value, "lPDescription");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionNotLike(String value) {
			addCriterion("L_P_Description not like", value, "lPDescription");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionIn(List<String> values) {
			addCriterion("L_P_Description in", values, "lPDescription");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionNotIn(List<String> values) {
			addCriterion("L_P_Description not in", values, "lPDescription");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionBetween(String value1, String value2) {
			addCriterion("L_P_Description between", value1, value2,
					"lPDescription");
			return (Criteria) this;
		}

		public Criteria andLPDescriptionNotBetween(String value1, String value2) {
			addCriterion("L_P_Description not between", value1, value2,
					"lPDescription");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table t_limit_power
	 * @mbggenerated  Mon Jun 22 20:33:59 CST 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_limit_power
     *
     * @mbggenerated do_not_delete_during_merge Wed Jun 17 15:19:59 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}